<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!-- 可以指定多个generatorConfiguration标签，以从多个数据库，或以多种不同的参数，生成MyBatis文件 -->
<generatorConfiguration>

    <!-- 指定外部的属性文件 -->
    <!--
    <properties url="file:///D:/softcode/mybatis.properties" />
    or
    <properties resource="config.properties"/>
     -->
    <properties resource="config.properties"/>

    <!-- 主要配置内容，指定生成哪些MyBais文件，targetRunTime指定生成代码的运行目标，defau<ltModelType指定一张数据表生成一个领域模型类 -->
    <!-- targetRuntime="MyBatis3Simple"：不生成Example.java文件，进而不生成XXXByExample方法，仅提供最基础的CRUD方法 -->
    <!-- tragetRuntime="MyBatis3"：生成Example.java文件和XXXByExample方法，除了最基础的CRUD方法外，提供自定义动态Where子句功能 -->
    <!--
    com.mbg.plugin.DefMyBatis3   MyBatis3
    -->
    <context id="MySQLTables" targetRuntime="com.base.framwork.plugin.mbg.DefMyBatis3" defaultModelType="flat">
        <property name="mergeable" value="true"></property>
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
                <property name="searchString" value="Example"/>
                <property name="replaceString" value="Condition"/>
        </plugin>
        <plugin type="com.base.framwork.plugin.mbg.DefEntityAnnotation"/>
        <plugin type="com.base.framwork.plugin.mbg.DefMapperAndSqlMapGenerator"/>
        <commentGenerator type="com.base.framwork.plugin.mbg.DefCommonGenerator">
            <!-- true:不生成注释，false:生成注释 (其中注释里有个标志 该标志可防止代码重复生成 ，只会更新新加的部分)-->
            <property name="suppressAllComments" value="false"/>
            <!-- 在注释中，true:不显示时间戳 ,false:显示时间戳 -->
            <property name="suppressDate" value="true"/>
            <!--This property is used to specify whether MBG will include table and column remarks from db table in the generated comments. def(false)-->
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!-- 1.指定JDBC数据库连接信息 -->
        <jdbcConnection driverClass="${jdbc.driverClass}"
                        connectionURL="${jdbc.connectionURL}"
                        userId="${jdbc.userId}"
                        password="${jdbc.password}">
        </jdbcConnection>

        <!-- 类型解析器 -->
        <!-- false: 默认值，根据JDBC中的DECIMAL/NUMBERIC类型的具体定义，分别表达为java.math.BigDecimal, java.lang.Long/Integer/Short -->
        <!-- true: 始终使用java.math.BigDecimal表达JDBC中的DECIMAL/NUMBERIC类型 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 2. 指定采用何种方式，生成何种对象 -->
        <!-- 生成领域模型（实体类）和查询对象，	在tragetProject目录下的targetPackage(test.model)包中生成与数据表同名的领域模型 (Pet.java)， 生成名为PetExample.java的查询对象 -->
        <javaModelGenerator targetPackage="${javaModel.targetPackage}"
                            targetProject="${javaModel.targetProject}">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
            <!-- 不使用setProperty方法，而是使用构造函数为每个字段赋值，推荐不设置此属性 -->
            <!-- <property name="immutable" value="true" /> -->
        </javaModelGenerator>

        <!-- 生成 MyBatis的SQL映射文件，PetMapper.xml -->
        <sqlMapGenerator targetPackage="${sqlMap.targetPackage}"
                         targetProject="${sqlMap.targetProject}">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!--生成MyBatis的DAO接口，PetMapper.java -->
        <!-- type表示javaClient的类型，支持XMLMAPPER:SQL映射文件+接口，ANNOTATEDMAPPER：SQLBuilder+注解+接口，MIXEDMAPPER：混合形式 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${javaClient.targetPackage}"
                             targetProject="${javaClient.targetProject}">
            <property name="enableSubPackages" value="true"/>
            <!-- 指定父接口，一般不使用 -->
            <!-- <property name="rootInterface" value="hello" /> -->
        </javaClientGenerator>

        <!-- 3. 指定为哪些数据表生成MyBatis文件 -->
        <!-- 生成指令  clean mybatis-generator:generate-->
        <!--MyBatis3-->
        <!-- dubbo 模块-->
        <table tableName="base_server_info"  mapperName="{0}Dao"
               enableUpdateByExample="true" enableDeleteByExample="true" selectByExampleQueryId="false"
               enableCountByExample="true"  enableSelectByExample="true" >
        </table>
        <table tableName="base_consume_info"  mapperName="{0}Dao"
               enableUpdateByExample="true" enableDeleteByExample="true" selectByExampleQueryId="false"
               enableCountByExample="true"  enableSelectByExample="true" >
        </table>
        <table tableName="base_server_consume_rel"  mapperName="{0}Dao"
               enableUpdateByExample="true" enableDeleteByExample="true" selectByExampleQueryId="false"
               enableCountByExample="true"  enableSelectByExample="true" >
        </table>
    </context>
</generatorConfiguration>
